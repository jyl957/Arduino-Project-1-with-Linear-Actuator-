// In this project, I used one Arduino UNO R3, one SR-Latch IC Chip, two resistance, one linear actuator, and one Ultrasonic sensor
// Ultrasonic sensor is HC-SR04
// SR-Latch IC Chip is SN74LS279AN 
// Linear actuator is designed and manufactured by Kitronik (the servo motor is FS90)

#include <Servo.h>

#define trigPin 10                   // Connect to Trig pin of HC-SR04
#define echoPin 13                   // Connect to Echo pin of HC-SR04
#define abcdPin 11                   // Connect to pin 15 (Set) of SR-Latch 
#define shdoPin 9                    // Connect to pin 14 (Reset) of SR-Latch 

float duration, distance;
const byte cds = A0;          // A0 is connected to pin 13 (Output) of SR-Latch

Servo myservo;                // Create servo object to control the linear actuator
 
int pos = 0;                  // Variable to store the servo position


void setup() {                       // Define all the pins
  Serial.begin (9600);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(abcdPin, OUTPUT);
  pinMode(shdoPin, OUTPUT);

  Serial.begin (9600);
  myservo.attach(3);          // pin 3 is connected to orange wire(Control wire) of linear actuator

}

 
void loop() {

int vala;
   int valb;
   int vald;
    vala = analogRead(cds);            // Determine the voltage from A0 pin
   
  // Create a pulse to the HC-SR04 Trigger Pin
  
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
 
  duration = pulseIn(echoPin, HIGH);
  
  // Determine distance from duration
  // Use 343 metres per second as speed of sound
  
  distance = (duration / 2) * 0.0343;
  
  // Determine the state of liner actuator

    if (distance > 2 && distance <= 9) {    // Tell linear actuator to go to a new position when the distance is larger than 2cm and less than 9cm
        digitalWrite(abcdPin, HIGH);
        delayMicroseconds(2);
        digitalWrite(abcdPin, LOW);         // Output a LOW pulse to trigger the SET of SR-latch
        delayMicroseconds(10);
        digitalWrite(abcdPin, HIGH);        // Hold the HIGH pulse to keep the Output in HIGH
     }
    else {
      digitalWrite(abcdPin, HIGH);
      }


      if (distance > 9 && distance < 16) {  // Push linear actuator back to the original position when the distance is larger than 9cm and less than 16cm
        digitalWrite(shdoPin, HIGH);
        delayMicroseconds(2);
        digitalWrite(shdoPin, LOW);
        delayMicroseconds(10);
        digitalWrite(shdoPin, HIGH);
     }
    else {
      digitalWrite(shdoPin, HIGH);
      }

 
  Serial.print("Distance = ");
  if (distance >= 400 || distance <= 2) {
     Serial.println("Out of range");       

  }
  else {
    Serial.print(distance);
    Serial.println(" cm");
  }
  
  delay(500);                               


    valb = analogRead(cds);            // Determine the voltage from A0 pin after 500ms
    vald = valb - vala;                // Determine the difference between "vala" and "valb"
     Serial.println(vald);
     Serial.println(vala);
     Serial.println(valb);
     
           if(vald>400){               // If the vald is positive and larger than 300, it means that the output of SR-Latch is increased to HIGH voltage
     
  for (pos = 0; pos <= 90; pos += 1) { // The linear actuator goes from 0 degrees to 90 degrees
    // in steps of 1 degree
    myservo.write(pos);                // Tell linear actuator to go to position in variable 'pos'
  }
      }

       if(vald<-400){                  // If the vald is negative and smaller than -300, it means that the output of SR-Latch is decreased to LOW voltage
     
  for (pos = 90; pos >= 0; pos -= 1) { // The linear actuator goes from 90 degrees to 0 degrees
    myservo.write(pos); 
  }
       }
}
